/**
 * The input of a simulation
 * @param totalAssetsForSimulation - The total assets of the vault for the simulation
 * @param assetsInSafe - The assets in safe
 * @param pendingSiloBalances - The balance of the silo in assets and shares
 * @param pendingSettlement - The shares and assets that will be settled if the settle is possible
 * @param settleDeposit - Whether the curator wants to settle the deposits
 * @param inception - The params to use to compute the inception net APR
 * @param thirtyDay - The params to use to compute the 30 days net APR
 */
export interface SimulationInput {
  totalAssetsForSimulation: bigint;
  assetsInSafe: bigint;
  pendingSiloBalances: {
    assets: bigint;
    shares: bigint;
  };
  pendingSettlement: {
    assets: bigint;
    shares: bigint;
  };
  settleDeposit: boolean;
  inception?: {
    timestamp: number;
    pricePerShare: bigint;
  };
  thirtyDay?: {
    timestamp: number;
    pricePerShare: bigint;
  };
}

/**
 * The result of a simulation
 * @param totalAssets - The total assets of the vault after the simulation
 * @param totalSupply - The total supply of the vault after the simulation
 * @param managementFees - The management fees generated by the simulation
 * @param performanceFees - The performance fees generated by the simulation
 * @param excessReturns - The excess returns is the amount of assets over the assets at high water mark
 * @param periodNetApr - The net APR of the vault after the simulation
 * @param periodGrossApr - The gross APR of the vault after the simulation
 * @param thirtyDaysNetAPR - The net APR of the vault over the last 30 days
 * @param inceptionNetAPR - The net APR of the vault since the inception
 * @param pricePerShare - The price per share of the vault after the simulation (after fees).
 * @param grossPricePerShare - The price per share of the vault before the fees.
 * @param highWaterMark - The high water mark of the vault after the simulation
 * @param totalAssetsAtHighWaterMark - The total assets at high water mark of the vault after the simulation
 * @param assetsToUnwind - The assets to unwind in order to honor the redemptions
 * @param assetsTransferedFromSafe - The assets that will be transfered from the safe to the vault to honor the redemptions
 */
export interface SimulationResult {
  totalAssets: bigint;
  totalSupply: bigint;
  managementFees: {
    inAssets: bigint;
    inShares: bigint;
  };
  performanceFees: {
    inAssets: bigint;
    inShares: bigint;
  };
  excessReturns: bigint;
  periodNetApr: number;
  periodGrossApr: number;
  thirtyDaysNetApr?: number;
  inceptionNetApr?: number;
  pricePerShare: bigint;
  grossPricePerShare: bigint;
  highWaterMark: bigint;
  totalAssetsAtHighWaterMark: bigint;
  assetsToUnwind: bigint;
  assetsTransferedFromSafe: bigint;
}
